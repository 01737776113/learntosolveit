.. -*- coding: utf-8 -*-
.. include:: <s5defs.txt>
.. |==>| unicode:: U+02794 .. thick rightwards arrow

=======================================================
Python 3000 through Python Enhancement Proposals (PEPS)
=======================================================

.. sidebar:: Contents
   :class: handout

   .. contents:: :local:

.. class:: center big

   | *Senthil Kumaran*
   | orsenthil@gmail.com
   | http://uthcode.sarovar.org

Let us look at design process of Python 3 language through the PEPs.

There are 3 versions of this presentation:

* `S5 presentation <presentation.html>`__
* `Plain HTML handout <handout.html>`__
* `reStructuredText source <presentation.txt>`__

.. class:: small

   ©2006-2008, licensed under a `Creative Commons
   Attribution/Share-Alike (BY-SA) license
   <http://creativecommons.org/licenses/by-sa/3.0/>`__.

.. container:: handout

PEP 3000
========

.. class:: small

   ..

       | Beautiful is better than ugly.
       | Explicit is better than implicit.
       | Simple is better than complex.
       | Complex is better than complicated.
       | Flat is better than nested.
       | Sparse is better than dense.
       | Readability counts.
       | Special cases aren't special enough to break the rules.
       | Although practicality beats purity.
       | Errors should never pass silently.
       | Unless explicitly silenced.
       |     ...


.. container:: handout
   
PEP 3100
========

.. class:: small

   ..

       | In the face of ambiguity, refuse the temptation to guess.
       | There should be one—and preferably only one—obvious way to do it.
       | Although that way may not be obvious at first unless you're Dutch.
       | Now is better than never.
       | Although never is often better than *right* now.
       | If the implementation is hard to explain, it's a bad idea.
       | If the implementation is easy to explain, it may be a good idea.
       | Namespaces are one honking great idea—let's do more of those!

       -- Tim Peters

.. class:: incremental

   When in doubt::

       import this

.. container:: handout

   This particular "poem" began as a kind of a joke, but it really
   embeds a lot of truth about the philosophy behind Python.  The Zen
   of Python has been formalized in PEP 20, where the abstract reads:

       Long time Pythoneer Tim Peters succinctly channels the BDFL's
       guiding principles for Python's design into 20 aphorisms, only
       19 of which have been written down.

       -- http://www.python.org/dev/peps/pep-0020/

   You can decide for yourself if you're a "Pythoneer" or a
   "Pythonista".  The terms have somewhat different connotations.

   Try it in a Python interactive interpreter:

   >>> import this

   Here's another easter egg:

   >>> from __future__ import braces
     File "<stdin>", line 1
   SyntaxError: not a chance

   What a bunch of comedians! :-)


PEP 3101
========

.. class:: small

* foo
* bar

.. class:: incremental

* foo
* bar

.. container:: handout

* foo
* bar

PEP 3105
========

.. class:: small

.. class:: incremental

.. container:: handout

PEP 3106
========

.. class:: small

.. class:: incremental

.. container:: handout

PEP 3108
========

.. class:: small

.. class:: incremental

.. container:: handout

PEP 3109
========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3110
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3111
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3112
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3113
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3114
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3115
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3115 (2)
==============

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3118
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3119
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3120
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3128
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3132
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3135
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3137
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3138
==========

.. class:: small

.. class:: incremental

.. container:: handout

2to3 Tool
=========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3099
==========

.. class:: small

.. class:: incremental

.. container:: handout

PEP - 3003
==========

.. class:: small

.. class:: incremental

.. container:: handout
