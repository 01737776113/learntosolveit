=============================
How to Solve it using Python?
=============================

Presenter 
---------

Senthil Kumaran (orsenthil@gmail.com, +919880459565)

Intended audience
-----------------

Beginning to intermediate Python Programmers. Familiarity
with Python's syntax and usage is assumed.

This tutorial will use Python 3.1 examples (with changes from Python 2.6
explained, whenever it is applicable).

The Source Code and the Handout will contain the snippets written in both
Python 2.6 and Python 3.1.


Tutorial format
---------------

Interactive lecture, I will be explain the common programming problem and how
we can solve using Python. Will share to give some background about the problem
and before introducing the solution.
Whenever there is a Python Standard Library module used to solve a particular
problem, the capablities of that module will be elucidated.

The aim would be the provide the provide an insight into "How to solve it using
Python Standard Library and best practises", so that they would follow the
similar methodologies in future.

I will be taking questions throughout the tutorial.

Recording
---------

I give permission to record and publish my tutorial for free distribution.

Requirements
------------

Attendees are welcome to bring their laptops with Python installed (
*version 3.1* and *version 2.6* both installed).

Some snippets will be using Twisted Matrix Framework, those who would like to
try those recipes, would like to have Twisted Package installed for their
Python Distribution.

Notes for Reviewers
-------------------

This is a medium to advance level tutorial, that would analyze how to solve
the commonly occuring programming problems using Python. 

At PyCon 2009, I presented "A Tour of Python Standard Library", I realized that
having a Problem-Solution styled tutorial will be very effective to present the
capablities of Python Standard Library and will be efficient to keep the
audience engaged.

The problems I have selected are based on the my own experience some of the
frequently encounted ones, having a discussion on those problems in a class
room like atmosphere will tend to make the attendees recollect the discussion
whenever they encounter the situation again. 
They are frequently asked at the Python lists and Community websites and looked
out for in the ActiveState Recipes/ Python Cookbook.

I have chosen those particular snippets which demonstrate certain features of
the Python languge as well as introduce library modules capablities.

Python 3.x is becoming popular, I choose to present the recipes in Python 3.x
for the reason that, the audience can see that there is not much difference in
the syntax for recipes and how at times, the Python 3.x facilities are helpful
to solve the problem better.

The idea of the tutorial is give the correct intuition when approaching the problem.

Some Links:
~~~~~~~~~~~

* `Python Core Committer stats <http://www.ohloh.net/p/python/contributors/113816702277>`_
* `Python Tracker stats <http://cia.vc/stats/author/orsenthil>`_
* `Presentations made at Conferences * <http://code.google.com/p/uthcode/downloads/list>`_
* `Google Summer of Code -2008 blog page <http://urllib-gsoc.blogspot.com>`_
* `Online Resume <http://orsenthil.emurse.com/>`_

Promotional Summary
-------------------

One good way to develop applications is to divide the problem into smaller
managable chunks and the build those.  Once we identify and define those
smaller pieces of tasks, our problem becomes incredibly easier.

In this tutorial, we will identify the commonly occuring smaller tasks that
would fit into to bigger problems.  It would be handy reference to keep all
those recipes in hand so that when we need them most, we will have them at our
disposal.

Most often we come across the same programming problem regularly in our
programming tasks, Sometimes we find that, due to various reasons we implment
no so efficient solutions, which kind of gets the job done, and later forget
it, till we come across the same problem again.

Sometimes we come out of our laziness to look out for a 'good' solution to the
problem.  This tutorial is nothing but a collection of 'good' solutions to
frequently encountered problems.

I have studied thoroughly the recipes in the Cookbook for these problems, tried
to distill the information presented in those recipes  and I will try to share
some of my own knowledge in implementing those solutions.

Outline for Review
------------------

* Outline of the Tutorial and a Brief Overview of Standard Library. (30 minutes)

        - Recollecting certain common programing paradigms.
                - Review of Regular Expressions.
                - Constructing lists with list comprehension.
                - Handling Exceptions.
                - Generators.
        - Interesting Modules that easy our task.
                - Collections module.
                - itertools module.

* Lets start with Strings. (15 Minutes)
        - String Filters. Filtering a set of characters from a string.
        - translate method on the string and maketrans function.
        - Checking whether a string contains a set of characters.
        - Expanding and Compression Tabs.
        - Making Multiple Replacements in a String in a Single Pass.
        - Reading a Text File by Paragraphs.

* Files - We deal with them often. (15 Minutes)
        - File Handling Basics.
        - Reading a Single line from a file, given a line number (linecache module)
        - Using Random Access Input/Output.
        - Walking a Directory Tree
        - Finding files given a search path and a pattern.

* Date time Related (15 Minutes)
        - Efficient Strategies for handling date and time related tasks.
        - datetime module, time module.
        - Calculating time periods in a date range.

* Processing XMLs. (15 Minutes for next two sections)
        - Parsing XML using xml.etree module.
        - Other XML parsing modules and their differences.

* Dealing with Database stuff.
        - Serializing Data using pickle and cPickle Modules.

Break Timing

* Interesting Topic (5 Minutes)

	- Difference between sort method on the list and a sorted function. Why the builtin sort is super-fast (because it is timsort!)

* Process Handling. (20 Minutes)
        - Subprocess module. 
        - Capturing the Output and Error Streams from a Unix Shell Command.
        - Forking a Daemon Process on Unix.
        - Program Execution on Windows.
        - Writing a Task Schedular.
        - Monitoring a Directory in an asynchronous way using Twisted.

* Network Programming (15 Minutes)
        - Detecting Inactive Computers in a Network using the Socket Module.
        - Connecting to IRC and logging the messages.

* Web Programming (10 Minutes)
        - urllib module.
        - Parsing RSS Feeds

* Unit Tests (10 Minutes)
        - How to write Unittests for your Python programs using unittest module.

* Programming tasks.(10 Minutes)
        - Implementing Tuples with named items.
        - Performance Measurements using timeit module

* How to Convert Python 2 to Python 3. (20 Minutes)
        - 2to3 tool.
        - Unicode Strings and Bytes.
        - How to handle the Strings vs bytes issue. Will *your* application be affected? How to identify and how to resolve.

Outline for Website
-------------------

* Outline of the Tutorial and a Brief Overview of Standard Library.
* Lets start with Strings.
* Files - We deal with them often.
* Date time related tasks.
* Dealing with Database stuff.
* Process Handling.
* Processing XMLs.
* Web Programming
* Programming tasks.
* Unit Testing
* How to Convert Python 2 to Python 3.

Presenter Bio
-------------

Senthil Kumaran is a Python Core Developer contributing to the Internet related
modules in the Python Standard Library. He is a Senior Software Engineer at
Akamai Technologies, Bangalore working on some cool distributed systems related
tasks that use Python and Twisted.

He is associated with Spastics Society of Karnataka, Bangalore and teaches
students programming using Alice, and building Robots using LEGO Mindstorms.
He practises Karate and enjoys solving puzzles.


Presenter's Previous Experience
-------------------------------
        - Presented a Tutorial "A Tour of Python Standard Library" at US Pycon 2009.
        - Presented a Talk on "Algorithms using Python 3.0" at PyCon India 2009.
        - Presented a Talk on "Python Standard Library" at Freed.in 2007.
