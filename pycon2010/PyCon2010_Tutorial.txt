=============================
How to Solve it using Python?
=============================

Presenter 
---------

Senthil Kumaran (orsenthil@gmail.com, +919880459565)

Intended audience
-----------------

Beginning to intermediate Python Programmers. Familiarity
with Python's syntax and usage is assumed.

This tutorial will use Python 3.1 examples (with changes from Python 2.6
explained, whereever it is applicable).

The Source Code and the Handout will contain the snippets written in both
Python 2.6 and Python 3.1.


Tutorial format
---------------

Interactive lecture, I will be explain the common programming problem and how
we can solve using Python. Will share to give some background about the problem
and before introducing the solution.
Whenever there is a Python Standard Library module used to solve a particular
problem, the capablities of that module will be elucidated.

The aim would be the provide the provide an insight into "How to solve it using
Python Standard Library and best practises", so that they would follow the
similar methodologies in future.

I will be taking questions throughout the tutorial.

Recording
---------

I give permission to record and publish my tutorial for free
distribution.

Requirements
------------

Attendees are welcome to bring their laptops with Python installed (
*version 3.1* and *version 2.6* both installed).

Some snippets will be using Twisted Matrix Framework, those who would like to
try those recipes, would like to have Twisted Package installed for their
Python Distribution.

Notes for Reviewers
-------------------

At PyCon 2009, I presented "A Tour of Python Standard Library", I realized that
having a Problem-Solution styled tutorial will be very effective to present the
capablities of Python Standard Library and will be efficient to keep the
audience engaged.

The problems I have selected are based on the my own experience some of the
frequently encounted ones, having a discussion on those problems in a class
room like atmosphere will tend to make the attendees recollect the discussion
whenever they encounter the situation again. 
They are frequently asked at the Python lists and Community websites and looked
out for in the ActiveState Recipes/ Python Cookbook.

I have chosen those particular snippets which demonstrate certain features of
the Python languge as well as introduce library modules capablities.

Python 3.x is becoming popular, I choose to present the recipes in Python 3.x
for the reason that, the audience can see that there is not much difference in
the syntax for recipes and how at times, the Python 3.x facilities are helpful
to solve the problem better.

Some Links:
~~~~~~~~~~~

* `Python Core Committer stats <http://www.ohloh.net/p/python/contributors/113816702277>`_
* `Python Tracker stats <http://cia.vc/stats/author/orsenthil>`_
* `Presentations made at Conferences * <http://code.google.com/p/uthcode/downloads/list>`_
* `Google Summer of Code -2008 blog page <http://urllib-gsoc.blogspot.com>`_
* `Online Resume <http://orsenthil.emurse.com/>`_

Promotional Summary
-------------------

Most often we come across the same programming problem regularly in our
programming tasks, Sometimes we find that, due to various reasons we implment
no so efficient solutions, which kind of gets the job done, and later forget
it, till we come across the same problem again.

Sometimes we come out of our laziness to look out for a 'good' solution to the
problem.  This tutorial is nothing but a collection of 'good' solutions to
frequently encountered problems.

I have studied thoroughly the recipes in the Cookbook for these problems, tried
to distill the information presented in those recipes  and I will try to share
some of my own knowledge in implementing those solutions.

Outline for Review
------------------

* A very brief Introduction to Python and Python Standard Library (20 minutes)
	- Introduction to Python. 
		- Recollecting topics from earlier tutorials.
	- Brief tour of Standard Library. 
		- Giving the audience an overall picture.
		- Explaining the "Batteries Included" philosophy.
	- Operating System Interface.
	- Command Line Arguments.
	- String Pattern Matching.
	- Internet Access
	- Multi-threading.
	- Logging.
	- Structure of the Python Standard Library in Python 2.6 and Changes to
	  Standard Library in Python 3.0.
	- How to get help about a particular library module.

* Built-In Modules and Exceptions. (30 minutes)
	- Example Program 1 which explains the built-in functions
		- abs
		- dir
		- enumerate
		- file
		- hasattr
		- setattr
		- getattr
	- Example Program 2 which explains the built-in types
		- and, or, not
		- int, float, long, complex
		- dict
		- iterator types.
		- File Objects.
	- Built-In Exceptions.
		- Example Program 3 explaining demonstrating Exceptions

* Operating Systems, Files and Directory Access. (30 minutes)
	- Overview of various modules present in this category. ( Tabular form)
	- Peek into certain modules in detail. My idea is to divide the 30 minute session into two snippets(15 minutes each), while effectively demonstrating certain modules usage and important methods in that module.  Other sections will follow the similar pattern.
		- os
		- time
		- shutil
		- glob
		- ConfigParser
		- logging
	- Changes in Python 3.0 for modules under this category.

* Internet Protocols and support -I . (10 minutes)
	- Overview.
	- Details of the Modules.
	- urllib, urlparse.
	- BaseHTTPServer

* Break timing.

* Internet Protocols and support -II . (20 minutes)
	- SimpleXMLRPCServer
	- smtpd
	- smtplib
	- Changes in Python 3.0 for modules under this category.

* Operating System Services and IPC. (30 minutes)
	- Overview.
	- threading and thread
	- signal
	- subprocess
	- Limitations - global lock in threading.
	- Changes in Python 3.0 for modules under this category.

* Development Tools (30 minutes)
	- Overview
	- pydoc.
	- doctest
	- unittest
	- 2to3
	- test and test_support.

* Extending the library module in your programs. (10 minutes)
	- 'duck-typing' explained.
	- Example Program explaining extending the ConfigParser module to read
	  a particular format of a Config file.

Outline for Website
-------------------

    * Overview of Python Standard Library.
    * Built-in modules and exceptions.
    * Operating Systems, Files and Directory Access.
    * Internet Protocols and support.
    * Operating System Services and IPC.
    * Development Tools
    * Extending the library module in your programs.
    * Q&A

Presenter Bio
-------------

Senthil Kumaran is a freelance Python Programmer from India, working on
developing web applications using Django.  He got involved with Python
Community through Google Summer of Code as student participant to enhance the
urllib and related modules for Python 2.6 and Py3k.  He worked along with
Facundo Batista, Jeremy and various other Python developers to fix various
urllib related bugs in Python standard library. He enjoys practicing Karate and
volunteers for spasticssocietyofkarnataka.org teaching students using LEGO NXT
kits.


Presenter's Previous Experience
-------------------------------

    * Presented a talk on Python Standard Library at Freed.in 2007.
    * Was working as Python programmer in the Test Automation department at Dell India R&D.
