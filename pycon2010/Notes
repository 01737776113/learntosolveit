TODO
====

- Read a Bit about Exception Handling in python3k.

What is a predicate?
--------------------
A term you can see often in discussions about programming is predicate, it just
means a function (or other callable object) that returns True or False as its
result. A predicate is said to be satisfied when it returns True.

Outline for Review
------------------

* Outline of the Tutorial and a Brief Overview of Standard Library. (30 minutes)

        - Recollecting certain common programing paradigms.
                - Review of Regular Expressions.
                - Constructing lists with list comprehension.
                - Handling Exceptions.
                - Generators.
        - Interesting Modules that easy our task.
                - Collections module.
                - itertools module.

* Lets start with Strings. (15 Minutes)
        - String Filters. Filtering a set of characters from a string.
        - translate method on the string and maketrans function.
        - Checking whether a string contains a set of characters.
        - Expanding and Compression Tabs.
          -- Probably give the Tools/reident.py Introduction.
	- Strings reindent.
        - Making Multiple Replacements in a String in a Single Pass.
        - Strings Template
        - Reading a Text File by Paragraphs. 
          -- Where did I get this idea from?
          http://code.activestate.com/recipes/66063/

* Files - We deal with them often. (15 Minutes)
        - File Handling Basics.
        - Reading a Single line from a file, given a line number (linecache module)
        - Using Random Access Input/Output.
        - Walking a Directory Tree
          -- Use example for last year's tutorial.
        - Finding files given a search path and a pattern.

* Date time Related (15 Minutes)
        - Efficient Strategies for handling date and time related tasks.
        - datetime module, time module. 
        - Calculating time periods in a date range. 
          -- basic method.

* Processing XMLs. (15 Minutes for next two sections)
        - Parsing XML using xml.etree module.
        - Other XML parsing modules and their differences.
          -- this should be theory.

* Dealing with Database stuff.
        - sqlite3 database - write for dealing with reading for reading the data too.
        - Serializing Data using pickle and cPickle Modules.

Break Timing

* Interesting Topic (5 Minutes)

	- Difference between sort method on the list and a sorted function. Why the builtin sort is super-fast (because it is timsort!)

* Process Handling. (20 Minutes)
        - Subprocess module. 
        - Capturing the Output and Error Streams from a Unix Shell Command.
        - Forking a Daemon Process on Unix.
 	  -- Is it there?
        - Program Execution on Windows.
          -- Use subprocess module again
        - Writing a Task Schedular.
          -- Read a bit about sched module.
        - Monitoring a Directory in an asynchronous way using Twisted.

* Network Programming (15 Minutes)
        - Detecting Inactive Computers in a Network using the Socket Module.
          -- Big Program. Decide later.
        - Connecting to IRC and logging the messages.

* Web Programming (10 Minutes)
        - urllib module.
        - Parsing RSS Feeds
          -- Dont have time for this one.

* Unit Tests (10 Minutes)
        - How to write Unittests for your Python programs using unittest module.

* Programming tasks.(10 Minutes)
        - Implementing Tuples with named items.
        - Performance Measurements using timeit module
          -- sorted and sorts kind of explained that.

* How to Convert Python 2 to Python 3. (20 Minutes)
        - 2to3 tool.
        - Unicode Strings and Bytes.
        - How to handle the Strings vs bytes issue. Will *your* application be affected? How to identify and how to resolve.
